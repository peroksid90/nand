// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    RAM512(in = ram0, load = load0, address = address[0..8], out = outRam0);
    RAM512(in = ram1, load = load1, address = address[0..8], out = outRam1);
    RAM512(in = ram2, load = load2, address = address[0..8], out = outRam2);
    RAM512(in = ram3, load = load3, address = address[0..8], out = outRam3);
    RAM512(in = ram4, load = load4, address = address[0..8], out = outRam4);
    RAM512(in = ram5, load = load5, address = address[0..8], out = outRam5);
    RAM512(in = ram6, load = load6, address = address[0..8], out = outRam6);
    RAM512(in = ram7, load = load7, address = address[0..8], out = outRam7);

   DMux8Way(in = load, sel = address[9..11], a = load0, b = load1, c = load2, d = load3,
                                            e = load4, f = load5, g = load6, h = load7);

   DMux8Way16(in = in, sel = address[9..11], a = ram0, b = ram1, c = ram2, d = ram3,
                                            e = ram4, f = ram5, g = ram6, h = ram7);

   Mux8Way16(a = outRam0, b = outRam1, c = outRam2, d = outRam3, e = outRam4, f = outRam5,
             g = outRam6, h = outRam7, sel = address[9..11], out = out);

}
